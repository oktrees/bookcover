{"version":3,"sources":["App.js","reportWebVitals.js","styles/GlobalStyles.jsx","styles/theme.jsx","inc/Header.jsx","inc/Footer.jsx","section/Home.jsx","section/BookListRead.jsx","section/BookListForm.jsx","section/BookList.jsx","section/ContactRead.jsx","section/ContackForm.jsx","section/Contact.jsx","section/Admin.jsx","section/Section.jsx","Layout.jsx","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyles","createGlobalStyle","reset","theme","mainColor","successColor","Container","styled","div","LogoBox","NavBox","LinkStyled","Link","Header","to","LinkStyeld","Footer","useCookies","cookies","removeCookie","history","useHistory","auth","onClick","window","confirm","alert","push","apiurl","Image","img","ImgageBox","Home","Slider","useState","bookList","setBookList","useEffect","axios","get","data","dataArr","Object","entries","map","val","length","id","url","catch","e","console","error","onWheel","slickCenter","document","getElementsByClassName","key","classList","contains","deltaY","undefined","Number","click","offsetTop","arrows","centerMode","infinite","centerPadding","slidesToShow","slidesToScroll","variableWidth","focusOnSelect","speed","row","item","src","frontimg","BookBox","Title","button","css","Button","BookListRead","onClickForm","param","target","dataset","delete","headers","result","list","alt","title","data-id","Form","form","Input","input","BookListForm","props","setTitle","contents","setContents","match","params","name","log","onSubmit","preventDefault","FormData","post","patch","enctype","type","placeholder","value","onChange","required","Contents","BookList","exact","path","component","TextBox","pre","ContactRead","contact","setContact","ContactForm","URLSearchParams","Contact","ContackRead","ContackForm","Admin","setCookie","action","code","token","message","Section","test","attrs","Layout","basename","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.48823c19.chunk.js","sourcesContent":["import './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyles = createGlobalStyle`\n  ${reset}\n  * {\n    box-sizing: border-box;\n    font-family: serif, sans-serif;\n  }\n  *:focus {\n    outline: 0;\n    outline: none;\n  }\n  body {\n    padding: 0;\n    margin: 0;\n  }\n  a {\n    text-decoration: none;\n    color: black;\n  }\n`\n\nexport default GlobalStyles;","const theme = {\n    mainColor: 'yellow',\n    successColor: 'blue',\n}\n\nexport default theme;","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n    return (\n        <Container>\n            <LogoBox>BOOK COVER</LogoBox>\n            <NavBox>\n                <LinkStyled to=\"/\">HOME</LinkStyled>&nbsp;\n                <LinkStyled to=\"/booklist\">BOOKLIST</LinkStyled>&nbsp;\n                <LinkStyled to=\"/contact\">CONTACT</LinkStyled>&nbsp;\n            </NavBox>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    width: 100%;\n    max-width: 800px;\n    height: 120px;\n    margin: auto;\n    display: flex;\n    justify-content: space-between;\n    grid-area: header;\n    @media (max-width: 1024px) {\n        width: 90%;\n    }\n`\nconst LogoBox = styled.div`\n    width: 100px;\n    height: 120px;    \n    display: flex;\n    align-items: center;\n`\nconst NavBox = styled.div`\n    width:60%;\n    height: 120px;    \n    display: flex;\n    align-items: center;\n    justify-content: flex-end;    \n`\nconst LinkStyled = styled(Link)`\n    margin-left: 5%;\n    color: #888;\n    font-size: 18px;\n    font-weight: 400;\n    &{\n        transition: all .1s;\n    }\n    &:hover {\n        color: #F0CA42;\n    }\n`\n\n\nexport default Header;","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { useCookies } from 'react-cookie';\nimport { useHistory } from \"react-router-dom\";\n\nconst Footer = () => {\n    const [cookies, setCookie, removeCookie] = useCookies(['auth']);\n\n    const history = useHistory();\n\n    const onClickEvent = () => {\n        if(window.confirm('로그아웃 하시겠습니까?')) {\n            removeCookie('auth');\n            alert('로그아웃이 되었습니다.');\n            history.push(\"/\");\n        }        \n    }\n    return (\n        <Container>\n            © COPYRIGHT 2020. \n            {cookies.auth ? \n                <div onClick={onClickEvent}>oktree.</div> :\n                <LinkStyeld to=\"/admin\">oktree.</LinkStyeld>\n            }\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    width: 100%;\n    height: 50px;\n    margin: auto;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    grid-area: footer;\n    font-size: 14px;\n`\n\nconst LinkStyeld = styled(Link)`\n    cursor: text;\n`\n\nexport default Footer;","import React, { useState, useEffect } from \"react\";\nimport Slider from \"react-slick\";\nimport styled from 'styled-components';\nimport axios from \"axios\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nconst apiurl = 'https://book.oktreeapi.com/';\n\nconst Home = () => {\n    const [bookList, setBookList] = useState([]);\n\n    useEffect(() => {\n        axios.get(apiurl + 'book/limit/5')\n        .then(({ data }) => {\n            let dataArr = [];\n            dataArr.push(Object.entries(data).map(val => val[1]))\n            if(dataArr[0].length !== 1){\n                dataArr[0].push({ id: 't15', url: \"\" })\n                dataArr[0].push({ id: 't16', url: \"\" })\n            }\n            setBookList(dataArr[0]);\n        })\n        .catch(e => {  \n            console.error(e);  \n        });\n    }, [])\n\n    const settings = {\n        arrows: false,\n        centerMode: true,\n        infinite: false,\n        centerPadding: \"0\",\n        slidesToShow: 3,\n        slidesToScroll: 1,\n        variableWidth: true,\n        focusOnSelect:true,\n        speed: 200,\n        row: 1        \n    };\n    \n\n    const onWheel = (e) => {        \n        const slickCenter = document.getElementsByClassName('slick-active');\n        for(var [key,val] of Object.entries(slickCenter)) {\n            if(val.classList.contains('slick-center')){\n                if (e.deltaY < 0) {\n                    if(slickCenter[Number(key)-1] !== undefined){\n                        slickCenter[Number(key)-1].click();\n                    }\n                }\n                else {\n                    if(slickCenter[Number(key)+1] !== undefined && slickCenter[Number(key)+1].offsetTop === 0){\n                        slickCenter[Number(key)+1].click()\n                    }\n                }\n            }\n        }\n    }\n\n    return (\n        <Container onWheel={onWheel} >\n            {<Slider {...settings}>\n                {bookList.map(item => {\n                    return (\n                        <ImgageBox key={item.id}>\n                            <Image src={item.frontimg && apiurl + \"uploads/\" + item.frontimg}  />\n                        </ImgageBox>\n                    );\n                })}              \n            </Slider> }\n        </Container>\n    );\n}\n\nconst Container = styled.div`\n    width: auto;\n    height: 70%;\n    max-height: 900px;\n    margin-top: 8vh;\n    z-index: 1;\n    overflow: hidden;\n`;\nconst Image = styled.img`\n    width: auto;\n    max-width: 80vw;\n    height: 100%;\n`;\nconst ImgageBox = styled.div`\n    display: inline-block;\n    margin-right: 15px;\n    // width: 50%;\n`\nconst StyledSlider = styled(Slider)`  \n`;\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { useCookies } from 'react-cookie';\n\nconst apiurl = 'https://book.oktreeapi.com/';\n\nconst BookListRead = () => {\n    const [bookList, setBookList] = useState([]);\n    const [cookies, setCookie] = useCookies(['auth']);\n\n    useEffect(() => {\n        axios.get(apiurl + 'book')\n        .then(({ data }) => {\n            setBookList(data);\n        })\n        .catch(e => {  \n            console.error(e);  \n        });\n    }, [])\n    \n    const onClickForm = (e) => {\n        if(!window.confirm('게시글을 삭제하시겠습니까?')) return;\n\n        const param = e.target.dataset.id;\n\n        axios\n        .delete(apiurl + 'book/' + param, {\n            headers: {\n                'Authorization': cookies.auth,\n            }\n        })\n        .then(({ data }) => {\n            if (data.result) {\n                alert('게시글이 삭제되었습니다.')\n                setBookList(data.list)\n            }    \n        })\n        .catch(e => {  \n            console.error(e);  \n        });\n    }\n\n\n    return (\n        <Container>\n            {bookList.map(val =>                     \n                <BookBox key={val.id}>\n                    <img src={val.frontimg && apiurl + \"uploads/\" + val.frontimg} alt=\"\"/>                        \n                    <Title>{val.title}</Title>\n                    <div>\n                        {cookies.auth && \n                        <LinkStyled to={`/booklist/form/${val.id}`}>수정</LinkStyled> }\n                        {cookies.auth && <Button onClick={onClickForm} data-id={val.id}>삭제</Button> }\n                    </div>\n                </BookBox>\n            )}       \n        </Container>\n    )\n}\nconst Container = styled.div`\n    width: 100%;\n    display: flex;\n    flex-wrap : wrap;\n    justify-content: flex-start;\n`\n\nconst BookBox = styled.div`\n    width: 31% ;\n    margin-left: 2%;\n    margin-bottom: 8%;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    align-items: center;\n    img { \n        max-width: 100%;\n        height: auto;\n        max-height: 40vh;\n        margin-bottom: 10%;\n    }\n    img:hover {\n        transition: all .3s;\n        transform: scale(1.04);\n    }\n    @media (min-width: 768px) and (max-width: 1024px) {\n        width: 44% ;\n        margin: 0 3%;\n    }\n    @media all and (max-width: 767px) {\n        width: 90% ;\n        margin: 0 5%;\n        margin-bottom: 15%;\n    }\n`\nconst Title = styled.div`\n    color: #888;\n    &:hover {\n        transition: all .1s;\n        color: #333;\n    }\n`\n\nconst button = css`\n    display: inline-block;\n    border: 1px solid #aaa;\n    font-size: 18px;\n    font-weight: 400;\n    color: #666;\n    padding: 0px 20px ;\n    height: 30px;\n    line-height: 30px;\n    align-self: flex-end;      \n    &{\n        transition: all .2s;\n    }\n    &:hover {\n        background-color: #F0CA42;\n        border: 1px solid #F0CA42;\n        color: #fff;\n    }\n`\n\nconst Button = styled.div`\n    ${button}\n`\n\nconst LinkStyled = styled(Link)`\n    ${button}\n`\n\nexport default BookListRead;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { useCookies } from 'react-cookie';\n\nconst apiurl = 'https://book.oktreeapi.com/';\n\nconst BookListForm = (props) => {\n    const [title, setTitle] = useState('');\n    const [contents, setContents] = useState('');\n\n    const [cookies, setCookie] = useCookies(['auth']);\n\n    const param = props.match.params.name;\n    const history = useHistory();\n\n    useEffect(() => {\n        if(param === 'create') return;\n\n        axios.get(apiurl + 'book/' + param)\n        .then(({ data }) => {    \n            console.log(data);\n            setTitle(data[0].title)\n            setContents(data[0].contents)\n        })\n        .catch(e => {              \n            console.error(e);  \n        });\n    }, [])\n\n    const onSubmitForm = (e) => {\n        e.preventDefault();\n        const data = new FormData(e.target) \n        if(param === 'create') {\n            axios\n                .post(apiurl + 'book/', data, { \n                    headers: {\n                        'Content-Type': 'multipart/form-data',\n                        'Authorization': cookies.auth,\n                    }\n                })\n                .then(({ data }) => {\n                    if (data) {\n                        alert('게시글이 생성되었습니다.')\n                        history.push(\"/booklist\");\n                    }           \n                })\n                .catch(e => {  \n                    alert('오류가 발생하였습니다.')\n                    console.error(e);  \n                });\n        }else {\n            axios\n                .patch(apiurl + 'book/' + param, data, { \n                    headers: {\n                        'Content-Type': 'multipart/form-data',\n                        'Authorization': cookies.auth,\n                    }\n                })\n                .then(({ data }) => {\n                    if (data) {\n                        alert('게시글이 수정되었습니다.')\n                        history.push(\"/booklist\");\n                    }      \n                })\n                .catch(e => {  \n                    alert('오류가 발생하였습니다.')\n                    console.error(e);  \n                });\n        }\n    }\n\n    return (\n        <Form onSubmit={onSubmitForm} enctype=\"multipart/form-data\">\n            <Input \n                type=\"text\" \n                name=\"title\" \n                placeholder=\"제목\" \n                value={title} \n                onChange={e => setTitle(e.target.value)}\n                required\n            />\n            <textarea \n                name=\"contents\" \n                value={contents} \n                placeholder=\"내용\"\n                onChange={e => setContents(e.target.value)}\n            />          \n            <input type=\"file\" name=\"file1\" />\n            <input type=\"file\" name=\"file2\" />\n            <button type=\"submit\">확인</button>\n        </Form>\n    )\n}\nconst Container = styled.div`\n`\n\nconst Form = styled.form`\n    width: 100%;\n    height: 50vh;\n    max-width: 800px;\n    margin: auto;\n    // border-top: 1px dashed #999;\n    // border-bottom: 1px dashed #999;\n    textarea {\n        width: 100%;\n        height: auto;\n        min-height: 80%;\n        border-radius: 5px;\n        margin-bottom: 20px;\n        border: 1px solid #aaa;\n        resize: none;\n    }\n    @media (max-width: 1024px) {\n        padding: 0 5%;\n    }\n`\nconst Input = styled.input`\n    height: 40px;\n    border-radius: 5px;\n    margin-bottom: 10px;\n    border: 1px solid #aaa;\n`\n\nexport default BookListForm;","import React from 'react';\nimport styled from 'styled-components';\nimport { Link, Route } from 'react-router-dom';\nimport { useCookies } from 'react-cookie';\n\nimport BookListRead from './BookListRead';\nimport BookListForm from './BookListForm';\n\nconst BookList = () => {\n    const [cookies, setCookie] = useCookies(['auth']);\n\n    return (\n      <Container>\n        <Title>\n            <div>\n                <span>BOOKLIST</span>\n                {cookies.auth && <LinkStyled to=\"/booklist/form/create\">글쓰기</LinkStyled> }\n            </div>\n        </Title>\n        <Contents>\n            <Route exact path=\"/booklist\" component={BookListRead} ></Route>                  \n            <Route path=\"/booklist/form/:name\" component={BookListForm}></Route>\n        </Contents>         \n      </Container>\n    )\n}\n\nconst Container = styled.div`\n    background-color: #F5F3E9;\n    height: auto;\n    min-height: calc(100vh - 170px);\n    margin: auto;\n    display: grid;\n    grid-template-rows: 50px 1fr;\n    grid-template-columns: 1fr minmax(auto,1200px) 1fr;     \n`\nconst Title = styled.div`\n    background-color: #fff;\n    grid-area: 1/1/2/4;\n    div {\n        width: auto;\n        max-width: 800px;\n        margin: auto;\n        font-weight: 700;\n        font-size: 40px;\n        color: #999;\n        display: flex;\n        justify-content: space-between;\n    }\n    @media (max-width: 1024px) {\n        padding: 0 5%;\n    }\n`\nconst Contents = styled.div`\n    grid-area: 2/2/3/3; \n    width: auto;\n    height: 90%;\n    margin-top: 5%;\n    margin-bottom: 5%;\n    // background-color: #fff;\n    @media (min-width: 768px) and (max-width: 1024px) {\n        padding: 0 5%;\n    }\n`\nconst LinkStyled = styled(Link)`\n    border: 1px solid #aaa;\n    font-size: 18px;\n    font-weight: 400;\n    color: #666;\n    padding: 0px 20px ;\n    height: 30px;\n    line-height: 30px;\n    align-self: flex-end;      \n    &{\n        transition: all .2s;\n    }\n    &:hover {\n        background-color: #F0CA42;\n        border: 1px solid #fff;\n        color: #fff;\n    }\n`\n\nexport default BookList;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from \"axios\";\n\nconst apiurl = 'https://book.oktreeapi.com/';\n\nconst ContactRead = () => {\n    const [contact, setContact ] = useState('');\n    useEffect(() => {\n        axios.get(apiurl + 'auth')\n        .then(({ data }) => {\n            setContact(data.contact);\n        })\n        .catch(e => {  \n            console.error(e);  \n        });\n    }, [])\n    return (\n        <TextBox>   \n            {contact}\n        </TextBox>\n    )\n}\n\nconst TextBox = styled.pre`\n    font-size: 16px;\n    line-height: 25px;\n    color: #333;\n    white-space: pre-wrap;\n}\n`\nexport default ContactRead;","import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport axios from \"axios\";\nimport { useCookies } from 'react-cookie';\n\nconst apiurl = 'https://book.oktreeapi.com/';\n\nconst ContactForm = (props) => {\n    const [contact, setContact ] = useState('');\n\n    const [cookies, setCookie] = useCookies(['auth']);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        axios.get(apiurl + 'auth')\n        .then(({ data }) => {\n            setContact(data.contact);\n        })\n        .catch(e => {  \n            console.error(e);  \n        });\n    }, [])\n    const onSubmitForm = (e) => {\n        e.preventDefault();\n        const data = new URLSearchParams(new FormData(e.target));\n        axios.patch(apiurl + 'auth', data, {\n                headers: {\n                    'Authorization': cookies.auth,\n                }\n            })\n            .then(({ data }) => {\n                if (data) {\n                    alert('게시글이 수정되었습니다.');\n                    history.push(\"/contact\");\n                }\n            })\n            .catch(e => {  \n                console.error(e);  \n            });\n    }\n\n    return (\n        <Form onSubmit={onSubmitForm}>\n            <div>{props.match.params.id}</div>\n            <textarea \n                name=\"contact\" \n                value={contact} \n                onChange={ e => setContact(e.target.value) }\n            />\n            <button type=\"submit\">수정하기</button>\n        </Form>\n    )\n}\n\nconst Form = styled.form`\n    height: 100%;\n    textarea {\n        width: 100%;\n        height: auto;\n        min-height: 80%;\n        border-radius: 5px;\n        margin-bottom: 20px;\n        border: 1px solid #aaa;\n        resize: none;\n        font-size: 16px;\n        line-height: 25px;\n        color: #333;\n    }\n`\n\nexport default ContactForm;","import React from 'react';\nimport styled from 'styled-components';\nimport { Link, Route } from 'react-router-dom';\nimport { useCookies } from 'react-cookie';\n\nimport ContackRead from './ContactRead';\nimport ContackForm from './ContackForm';\n\nconst Contact = (props) => {\n    const [cookies, setCookie] = useCookies(['auth']);\n    \n    return (\n        <Container>\n            <Title>\n                <div>\n                    <span>CONTACT</span>\n                    {cookies.auth && <LinkStyled to=\"/contact/form\">수정</LinkStyled> }\n                </div>\n            </Title>\n            <Contents>\n                <Route exact path=\"/contact\" component={ContackRead} ></Route>                  \n                <Route path={`${props.match.url}/:name`} component={ContackForm}></Route>     \n            </Contents>          \n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    background-color: #F5F3E9;\n    height: auto;\n    min-height: calc(100vh - 170px);\n    display: grid;\n    grid-template-rows: 50px 1fr;\n    grid-template-columns: 1fr minmax(auto,800px) 1fr; \n`\nconst Title = styled.div`\n    background-color: #fff;\n    grid-area: 1/1/2/4;\n    div {\n        width: auto;\n        max-width: 800px;\n        margin: auto;\n        font-weight: 700;\n        font-size: 40px;\n        color: #999;\n        display: flex;\n        justify-content: space-between;\n    }\n    @media (max-width: 1024px) {\n        padding: 0 5%;\n    }\n`\nconst Contents = styled.div`\n    grid-area: 2/2/3/3; \n    width: auto;\n    height: 90%;\n    margin-top: 5%;\n    margin-botton: 5%;\n    max-width: 800px;\n    // background-color: #fff;\n    @media (max-width: 1024px) {\n        padding: 0 5%;\n    }\n`\n\nconst LinkStyled = styled(Link)`\n    border: 1px solid #aaa;\n    font-size: 18px;\n    font-weight: 400;\n    color: #666;\n    padding: 0px 20px ;\n    height: 30px;\n    line-height: 30px;\n    align-self: flex-end;      \n    &{\n        transition: all .2s;\n    }\n    &:hover {\n        background-color: #F0CA42;\n        border: 1px solid #fff;\n        color: #fff;\n    }\n`\n\n\nexport default Contact;","import React from 'react';\nimport styled from 'styled-components';\nimport axios from \"axios\";\nimport { useCookies } from 'react-cookie';\nimport { useHistory } from \"react-router-dom\";\n\nconst apiurl = 'https://book.oktreeapi.com/';\n\nconst Admin = () => {\n    const [cookies, setCookie] = useCookies(['auth']);\n\n    const history = useHistory();\n\n    const onSubmitForm = (e) => {\n        e.preventDefault();\n        const data = new URLSearchParams(new FormData(e.target));\n\n        axios\n        .post(apiurl + 'auth', data)\n        .then(({ data }) => {\n           if(data.code === 200){\n                console.log(data);\n                setCookie('auth', data.token, { path: '/' });\n                alert('로그인이 되었습니다.');\n                history.push(\"/\");\n           } else{\n               console.log(data);\n                alert(data.message)\n           }\n        })\n        .catch( error => {  \n            console.error(error);             \n        });\n    }\n    return (\n        <Container>\n            <Form action=\"\" onSubmit={onSubmitForm}>\n                <Input type=\"text\" name=\"name\" placeholder=\"아이디\"/>\n                <Input type=\"password\" name=\"password\" placeholder=\"패스워드\"/>\n                <button>로그인</button>\n            </Form>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    background-color: #F5F3E9;\n    height: auto;\n    min-height: calc(100vh - 170px);\n    display: grid;\n    grid-template-rows: 50px 1fr;\n    grid-template-columns: 1fr auto 1fr; \n`\n\nconst Form = styled.form`\n    grid-area: 2/2/3/3; \n    width: auto;\n    height: 90%;\n    margin-top: 35%;\n    margin-bottom: 5%;\n`\nconst Input = styled.input`\n    display: block;\n    width: 200px;\n    height: 40px;\n    border-radius: 5px;\n    margin-bottom: 20px;\n    border: 1px solid #aaa;\n`\n\nexport default Admin;","import React from 'react';\nimport styled from 'styled-components';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Home from './Home'\nimport BookList from './BookList'\nimport Contact from './Contact'\nimport Admin from './Admin'\n\nconst Section = () => {  \n    const settings = {\n    className: \"center\",\n    centerMode: true,\n    infinite: true,\n    centerPadding: \"60px\",\n    slidesToShow: 3,\n    speed: 500\n};\n    return (\n        <Container>\n           <Switch>\n                <Route exact path=\"/\" component={Home} ></Route>                  \n                <Route path=\"/booklist\" component={BookList}></Route>                  \n                <Route path=\"/contact\" component={Contact}></Route>\n                <Route path=\"/admin\" component={Admin}></Route>\n            </Switch>         \n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    width: 100%;\n    height: 100%;\n    min-height: calc(100vh - 170px);\n    margin: auto;\n    // display: flex;\n    // align-items: center;\n    // justify-content: center;\n    // background-color: #eee;\n    grid-area: section;\n`\n\nexport default Section;","import React from 'react';\nimport styled, { keyframes, css, ThemeProvider } from 'styled-components';\nimport { BrowserRouter } from 'react-router-dom';\n// import Routes from './Routes'\n\nimport theme from './styles/theme'\nimport Header from './inc/Header';\nimport Footer from './inc/Footer';\nimport Section from './section/Section'\n\n\nconst test = css` \n    border: 5px solid ${props => props.theme.mainColor};\n`\n\nconst Input = styled.input.attrs({\n    type: \"password\",\n    required: true\n  })`\n    ${test};\n    \n`;\n\nconst Layout = () => {\n    return (            \n       \n        <ThemeProvider theme={theme}>\n            {/* <Input placeholder=\"hello\" /> */}\n            {/* {/* <Button >hello</Button> */}\n            {/* <Button danger rotationTime=\"15\">hello</Button> */}\n            {/* <Anchor href=\"#\">go to #</Anchor>  */}\n            <Container>   \n                <BrowserRouter basename='/reacttest'>\n                    <Header />\n                    <Section />\n                    <Footer />\n                </BrowserRouter>\n            </Container>\n        </ThemeProvider>\n    )\n}\n\nconst Container = styled.div`\n    height: auto;\n    min-height: 100vh;\n    width: 100%;\n    margin: auto;\n    display: grid;\n    grid-template-rows: 120px auto 50px;\n    grid-template-columns: 1fr minmax(auto,800px) 1fr;\n    grid-template-areas:\n\t\t\"header header header\"\n\t\t\"section section section\"\n        \"footer footer footer\";        \n    \n`\n\n\nexport default Layout;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport GlobalStyles from './styles/GlobalStyles'\nimport Layout from './Layout';\n\nReactDOM.render(\n  <>\n    <GlobalStyles/>\n    <Layout />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}